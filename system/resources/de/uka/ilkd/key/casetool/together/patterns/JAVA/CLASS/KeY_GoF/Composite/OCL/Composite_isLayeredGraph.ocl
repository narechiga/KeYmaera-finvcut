patternmodification#
canHaveSeveralSubclasses#Composite
addClassAttribute#Component#ord#Integer
addParameter#flavour#ComboBox#'strong'#'weak'

mapping#Composite#'Composite'
mapping#Leaf#'Leaf'
mapping#Component#'Component'
mapping#children#'Supplier Role'
mapping#flavour#'flavour'
mapping#ord#'Name of class-attribute ord in class Component'

invariant#class#Composite

schema# 
	let subtypes=OclType.allInstances->select(c|c.allSupertypes->includes(Composite)) in
	subtypes->collect(c|c.ord)=Bag{1..subtypes->size} and
	subtypes->forAll(sub1,sub2|sub1<>sub2 implies sub1.ord<>sub2.ord) and
	if (flavour=strong) then
		self.children->forAll(x|
			(x.oclType.ord=self.oclType.ord-1) or
			(self.oclType.ord=1 and x.oclType=Leaf))
	else
		self.children->forAll(x|
			x.oclType.ord<=self.oclType.ord or
			x.oclType=Leaf)
	endif


comment#

